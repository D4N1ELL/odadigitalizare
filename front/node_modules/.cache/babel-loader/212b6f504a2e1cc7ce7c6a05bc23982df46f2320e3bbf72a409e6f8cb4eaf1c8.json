{"ast":null,"code":"import * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nexport const exportToExcel = data => {\n  const wb = XLSX.utils.book_new();\n  const wsData = [];\n  const headers = [\"Nume Prenume\", \"Data aplicării\", \"Data aplicării repetat\", \"IDNP\", \"Data nașterii\", \"Vârsta\", \"Localitate\", \"Telefon\", \"E-mail\", \"Programul la care aplică\", \"Persoana care a apelat\", \"Data confirmării recepționării formularului / Data apelului\", \"Comentariu în urma discuției\", \"Statut în urma discuției\", \"TELEFON\", \"E-MAIL\", \"SMS\", \"VIBER\", \"Răspuns\", \"Grupa de instruire în care a fost invitat\", \"A doua înștiințare TELEFON\", \"A doua înștiințare E-MAIL\", \"A doua înștiințare SMS\", \"A doua înștiințare VIBER\", \"A doua înștiințare Răspuns\", \"A treia înștiințare TELEFON\", \"A treia înștiințare E-MAIL\", \"A treia înștiințare SMS\", \"A treia înștiințare VIBER\", \"A treia înștiințare Răspuns\", \"Participare la instruire\", \"Certificat obținut\", \"Aplicat la finanțare\", \"Statut în urma evaluării planului de afaceri\", \"Excluderea din baza de date\"];\n  wsData.push(headers);\n  data.forEach((person, personIndex) => {\n    const applicationDates = person.application_dates || [];\n    const instructionGroups = person.instruction_groups || [];\n    const notices = person.notices || [];\n    applicationDates.forEach((date, index) => {\n      const row = [person.user_data.username || 'N/A', date || 'N/A', applicationDates[index + 1] || 'N/A', person.user_data.idnp || 'N/A', person.user_data.bday || 'N/A', person.user_data.age || 'N/A', person.user_data.loc_name || 'N/A', person.user_data.phone_number || 'N/A', person.user_data.email || 'N/A', person.user_data.program_name || 'N/A', person.user_data.operator || 'N/A', person.user_data.confirmation_date || 'N/A', person.user_data.comment || 'N/A', person.user_data.status || 'N/A', notices[0] ? notices[0][0] || 'N/A' : 'N/A', notices[0] ? notices[0][1] || 'N/A' : 'N/A', notices[0] ? notices[0][2] || 'N/A' : 'N/A', notices[0] ? notices[0][3] || 'N/A' : 'N/A', notices[0] ? notices[0][4] || 'N/A' : 'N/A', instructionGroups[index] || 'N/A', notices[1] ? notices[1][0] || 'N/A' : 'N/A', notices[1] ? notices[1][1] || 'N/A' : 'N/A', notices[1] ? notices[1][2] || 'N/A' : 'N/A', notices[1] ? notices[1][3] || 'N/A' : 'N/A', notices[1] ? notices[1][4] || 'N/A' : 'N/A', notices[2] ? notices[2][0] || 'N/A' : 'N/A', notices[2] ? notices[2][1] || 'N/A' : 'N/A', notices[2] ? notices[2][2] || 'N/A' : 'N/A', notices[2] ? notices[2][3] || 'N/A' : 'N/A', notices[2] ? notices[2][4] || 'N/A' : 'N/A', person.instruction_groups.join(\", \") || 'N/A', person.user_data.certificate || 'N/A', person.user_data.finance || 'N/A', person.user_data.final_status || 'N/A', person.user_data.exclusion ? 'Exclus' : 'N/A'];\n      wsData.push(row);\n    });\n  });\n  console.log(wsData);\n  const ws = XLSX.utils.aoa_to_sheet(wsData);\n  const columnWidths = headers.map(header => ({\n    wch: header.length + 5\n  }));\n  ws[\"!cols\"] = columnWidths;\n  XLSX.utils.book_append_sheet(wb, ws, 'PersonDetails');\n  const wbout = XLSX.write(wb, {\n    bookType: \"xlsx\",\n    type: \"array\"\n  });\n  const blob = new Blob([wbout], {\n    type: \"application/octet-stream\"\n  });\n  saveAs(blob, \"PersonDetails.xlsx\");\n};","map":{"version":3,"names":["XLSX","saveAs","exportToExcel","data","wb","utils","book_new","wsData","headers","push","forEach","person","personIndex","applicationDates","application_dates","instructionGroups","instruction_groups","notices","date","index","row","user_data","username","idnp","bday","age","loc_name","phone_number","email","program_name","operator","confirmation_date","comment","status","join","certificate","finance","final_status","exclusion","console","log","ws","aoa_to_sheet","columnWidths","map","header","wch","length","book_append_sheet","wbout","write","bookType","type","blob","Blob"],"sources":["/home/liviu/ODA/front/src/components/ExcelExportButton/index.js"],"sourcesContent":["import * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\n\nexport const exportToExcel = (data) => {\n  const wb = XLSX.utils.book_new();\n  const wsData = [];\n\n  const headers = [\n    \"Nume Prenume\", \"Data aplicării\", \"Data aplicării repetat\", \"IDNP\", \"Data nașterii\", \"Vârsta\", \"Localitate\", \"Telefon\",\n    \"E-mail\", \"Programul la care aplică\", \"Persoana care a apelat\", \"Data confirmării recepționării formularului / Data apelului\", \"Comentariu în urma discuției\",\n    \"Statut în urma discuției\", \"TELEFON\", \"E-MAIL\", \"SMS\", \"VIBER\", \"Răspuns\", \"Grupa de instruire în care a fost invitat\",\n    \"A doua înștiințare TELEFON\", \"A doua înștiințare E-MAIL\", \"A doua înștiințare SMS\", \"A doua înștiințare VIBER\", \"A doua înștiințare Răspuns\",\n    \"A treia înștiințare TELEFON\", \"A treia înștiințare E-MAIL\", \"A treia înștiințare SMS\", \"A treia înștiințare VIBER\", \"A treia înștiințare Răspuns\",\n    \"Participare la instruire\", \"Certificat obținut\", \"Aplicat la finanțare\", \"Statut în urma evaluării planului de afaceri\", \"Excluderea din baza de date\"\n  ];\n\n  wsData.push(headers);\n\n  data.forEach((person, personIndex) => {\n    const applicationDates = person.application_dates || [];\n    const instructionGroups = person.instruction_groups || [];\n    const notices = person.notices || [];\n\n    applicationDates.forEach((date, index) => {\n      const row = [\n        person.user_data.username || 'N/A',\n        date || 'N/A',\n        applicationDates[index + 1] || 'N/A',\n        person.user_data.idnp || 'N/A',\n        person.user_data.bday || 'N/A',\n        person.user_data.age || 'N/A',\n        person.user_data.loc_name || 'N/A',\n        person.user_data.phone_number || 'N/A',\n        person.user_data.email || 'N/A',\n        person.user_data.program_name || 'N/A',\n        person.user_data.operator || 'N/A',\n        person.user_data.confirmation_date || 'N/A',\n        person.user_data.comment || 'N/A',\n        person.user_data.status || 'N/A',\n        notices[0] ? notices[0][0] || 'N/A' : 'N/A',\n        notices[0] ? notices[0][1] || 'N/A' : 'N/A',\n        notices[0] ? notices[0][2] || 'N/A' : 'N/A',\n        notices[0] ? notices[0][3] || 'N/A' : 'N/A',\n        notices[0] ? notices[0][4] || 'N/A' : 'N/A',\n        instructionGroups[index] || 'N/A',\n        notices[1] ? notices[1][0] || 'N/A' : 'N/A',\n        notices[1] ? notices[1][1] || 'N/A' : 'N/A',\n        notices[1] ? notices[1][2] || 'N/A' : 'N/A',\n        notices[1] ? notices[1][3] || 'N/A' : 'N/A',\n        notices[1] ? notices[1][4] || 'N/A' : 'N/A',\n        notices[2] ? notices[2][0] || 'N/A' : 'N/A',\n        notices[2] ? notices[2][1] || 'N/A' : 'N/A',\n        notices[2] ? notices[2][2] || 'N/A' : 'N/A',\n        notices[2] ? notices[2][3] || 'N/A' : 'N/A',\n        notices[2] ? notices[2][4] || 'N/A' : 'N/A',\n        person.instruction_groups.join(\", \") || 'N/A',\n        person.user_data.certificate || 'N/A',\n        person.user_data.finance || 'N/A',\n        person.user_data.final_status || 'N/A',\n        person.user_data.exclusion ? 'Exclus' : 'N/A'\n      ];\n      wsData.push(row);\n    });\n  });\n\n  console.log(wsData);\n\n  const ws = XLSX.utils.aoa_to_sheet(wsData);\n  const columnWidths = headers.map(header => ({ wch: header.length + 5 }));\n  ws[\"!cols\"] = columnWidths;\n\n  XLSX.utils.book_append_sheet(wb, ws, 'PersonDetails');\n  const wbout = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n  const blob = new Blob([wbout], { type: \"application/octet-stream\" });\n\n  saveAs(blob, \"PersonDetails.xlsx\");\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}